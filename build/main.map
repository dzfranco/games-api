{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./server/api/controllers/game/controller.ts","webpack:///./server/api/middleware/express-error-handling.ts","webpack:///./server/api/persistence/game.persistence.ts","webpack:///./server/api/service/game.service.ts","webpack:///./server/common/config/environment.ts","webpack:///./server/common/config/ioc_config.ts","webpack:///./server/common/identifiers.ts","webpack:///./server/common/models/game/game.ts","webpack:///./server/common/server.ts","webpack:///./server/index.ts","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"express-partial-response\"","webpack:///external \"inversify\"","webpack:///external \"inversify-express-utils\"","webpack:///external \"path\"","webpack:///external \"reflect-metadata\"","webpack:///external \"response-time\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { request, controller, BaseHttpController, httpGet, response, next } from 'inversify-express-utils';\nimport { Request, Response, NextFunction } from 'express';\nimport { IGameService } from '../../interfaces/service/igame.service';\nimport { inject } from 'inversify';\nimport { Identifiers } from '../../../common/identifiers';\nimport { NotFoundError } from 'restify-errors';\n\n@controller('/game')\nclass GameController extends BaseHttpController {\n\tprivate gameService: IGameService;\n\n\tconstructor(@inject(Identifiers.GAME_SERVICE_IDENTIFIER) $gameService: IGameService) {\n\t\tsuper();\n\t\tthis.gameService = $gameService;\n\t}\n\n\t@httpGet('')\n\tpublic async test(@request() req: Request, @response() res: Response, @next() next: NextFunction) {\n\t\tconst games = this.gameService.getGames('1', 1);\n\t\treturn res.send(games);\n\t}\n}\n\nexport default GameController;\n","import { DefinedHttpError, NotFoundError } from 'restify-errors';\nimport { Request, Response, NextFunction } from 'express';\n\nexport const errorHandlerMiddleware = (err, req: Request, res: Response, next: NextFunction) => {\n\tres.status(err.statusCode).send(err.body);\n\treturn next();\n};\n","import { injectable } from 'inversify';\nimport { IGame } from '../../common/models/game/igame';\nimport { Game } from '../../common/models/game/game';\nimport { IGamePersistence } from '../interfaces/persistence/igame.persistence';\n\n@injectable()\nexport class GamePersistence implements IGamePersistence {\n\tprivate games: IGame[];\n\tconstructor() {\n\t\tconst game1 = new Game();\n\t\tgame1.$id = 1;\n\t\tgame1.$price = 39.99;\n\t\tgame1.$tags = ['shooter'];\n\t\tgame1.$releaseDate = new Date();\n\t\tgame1.$publisher = 1;\n\t\tgame1.$title = 'Red Dead Redemption 2';\n\t\tthis.games = [game1];\n\t}\n\n\t/**\n\t * @description Gets the games depending on a cursor\n\t * @param  {string} cursor\n\t * @param  {number} limit\n\t * @return IGame[]\n\t * @memberof GamePersistence\n\t */\n\tpublic getGames(cursor: string, limit: number): IGame[] {\n\t\tconst cursorIndex = this.games.findIndex(game => game.$id.toString() === cursor);\n\t\tif (cursorIndex >= 0) {\n\t\t\treturn this.games.slice(cursorIndex, limit);\n\t\t}\n\t\treturn this.games.slice(0, limit);\n\t}\n}\n","import { injectable, inject } from 'inversify';\nimport { IGameService } from '../interfaces/service/igame.service';\nimport { IGame } from '../../common/models/game/igame';\nimport { IGamePersistence } from '../interfaces/persistence/igame.persistence';\nimport { Identifiers } from '../../common/identifiers';\n\n@injectable()\nexport class GameService implements IGameService {\n\tprivate gamePersistence: IGamePersistence;\n\n\tconstructor(@inject(Identifiers.GAME_PERSISTENCE_IDENTIFIER) $gamePersistence: IGamePersistence) {\n\t\tthis.gamePersistence = $gamePersistence;\n\t}\n\n\t/**\n\t * @description Gets the games from the database. This method should handle business logic.\n\t * @return IGame[]\n\t * @memberof GameService\n\t */\n\tpublic getGames(cursor: string, limit: number): IGame[] {\n\t\ttry {\n\t\t\tconst games = this.gamePersistence.getGames('1', 1);\n\t\t\treturn games;\n\t\t} catch (error) {\n\t\t\tthrow new Error(error.message);\n\t\t}\n\t}\n}\n","import { config } from 'dotenv';\n\nexport const configureEnv = () => {\n\tconsole.log(`Configuring environment: ${process.env.NODE_ENV}`);\n\tconfig({ path: `.${process.env.NODE_ENV}.env` });\n};\n","import 'reflect-metadata';\nimport { Container } from 'inversify';\n\nimport '../../api/controllers/game/controller';\nimport { IGamePersistence } from '../../api/interfaces/persistence/igame.persistence';\nimport { Identifiers } from '../identifiers';\nimport { GamePersistence } from '../../api/persistence/game.persistence';\nimport { IGameService } from '../../api/interfaces/service/igame.service';\nimport { GameService } from '../../api/service/game.service';\n\n/**\n * @description Inversion of Control Container\n *\n * This will be a signleton that sets up Inversify's container bindings\n */\nexport class IOCContainer {\n\tprivate static instance: IOCContainer;\n\tprivate container: Container;\n\n\tpublic get $container(): Container {\n\t\treturn this.container;\n\t}\n\n\tpublic set $container(container: Container) {\n\t\tthis.container = container;\n\t}\n\n\tpublic static getInstance() {\n\t\tif (!IOCContainer.instance) {\n\t\t\tIOCContainer.instance = new IOCContainer();\n\t\t\tconst container = new Container();\n\n\t\t\t// Inject persistence\n\t\t\tcontainer\n\t\t\t\t.bind<IGamePersistence>(Identifiers.GAME_PERSISTENCE_IDENTIFIER)\n\t\t\t\t.to(GamePersistence)\n\t\t\t\t.inSingletonScope();\n\n\t\t\t// Inject Service\n\t\t\tcontainer\n\t\t\t\t.bind<IGameService>(Identifiers.GAME_SERVICE_IDENTIFIER)\n\t\t\t\t.to(GameService)\n\t\t\t\t.inSingletonScope();\n\n\t\t\tIOCContainer.instance.container = container;\n\t\t}\n\n\t\treturn IOCContainer.instance;\n\t}\n}\n","export class Identifiers {\n\tpublic static GAME_SERVICE_IDENTIFIER = Symbol.for('game_service');\n\tpublic static GAME_PERSISTENCE_IDENTIFIER = Symbol.for('game_persistence');\n}\n","import { IGame } from './igame';\n\nexport class Game implements IGame {\n\tprivate id: number;\n\tprivate title: string;\n\tprivate price: number;\n\tprivate publisher: number;\n\tprivate tags: string[];\n\tprivate releaseDate: Date;\n\n\t/**\n\t * Getter $id\n\t * @return {number}\n\t */\n\tpublic get $id(): number {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Getter $title\n\t * @return {string}\n\t */\n\tpublic get $title(): string {\n\t\treturn this.title;\n\t}\n\n\t/**\n\t * Getter $price\n\t * @return {number}\n\t */\n\tpublic get $price(): number {\n\t\treturn this.price;\n\t}\n\n\t/**\n\t * Getter $publisher\n\t * @return {string}\n\t */\n\tpublic get $publisher(): number {\n\t\treturn this.publisher;\n\t}\n\n\t/**\n\t * Getter $tags\n\t * @return {string[]}\n\t */\n\tpublic get $tags(): string[] {\n\t\treturn this.tags;\n\t}\n\n\t/**\n\t * Getter $releaseDate\n\t * @return {Date}\n\t */\n\tpublic get $releaseDate(): Date {\n\t\treturn this.releaseDate;\n\t}\n\n\t/**\n\t * Setter $id\n\t * @param {number} value\n\t */\n\tpublic set $id(value: number) {\n\t\tthis.id = value;\n\t}\n\n\t/**\n\t * Setter $title\n\t * @param {string} value\n\t */\n\tpublic set $title(value: string) {\n\t\tthis.title = value;\n\t}\n\n\t/**\n\t * Setter $price\n\t * @param {number} value\n\t */\n\tpublic set $price(value: number) {\n\t\tthis.price = value;\n\t}\n\n\t/**\n\t * Setter $publisher\n\t * @param {string} value\n\t */\n\tpublic set $publisher(value: number) {\n\t\tthis.publisher = value;\n\t}\n\n\t/**\n\t * Setter $tags\n\t * @param {string[]} value\n\t */\n\tpublic set $tags(value: string[]) {\n\t\tthis.tags = value;\n\t}\n\n\t/**\n\t * Setter $releaseDate\n\t * @param {Date} value\n\t */\n\tpublic set $releaseDate(value: Date) {\n\t\tthis.releaseDate = value;\n\t}\n}\n","import * as express from 'express';\nimport * as partialResponse from 'express-partial-response';\nimport * as path from 'path';\nimport * as errorHandler from 'express-error-handler';\nimport { IOCContainer } from './config/ioc_config';\nimport { InversifyExpressServer } from 'inversify-express-utils';\nimport { errorHandlerMiddleware } from '../api/middleware/express-error-handling';\n\nconst responseTime = require('response-time');\n\n/**\n * Node Express Server setup and configuration\n */\nexport default class Server {\n\tpublic server: InversifyExpressServer;\n\n\tconstructor() {\n\t\tlet root: string;\n\n\t\t// Setup application root\n\t\troot = process.env.NODE_ENV === 'development' ? path.normalize(__dirname + '/../..') : path.normalize('.');\n\t\tconst container = IOCContainer.getInstance().$container;\n\t\tthis.server = new InversifyExpressServer(container, undefined, {\n\t\t\trootPath: '/api',\n\t\t});\n\t\tthis.server.setConfig(app => {\n\t\t\tapp.use((req, res, next) => {\n\t\t\t\tres.header('Access-Control-Allow-Origin', '*');\n\t\t\t\tres.header('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE');\n\t\t\t\tres.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n\t\t\t\tnext();\n\t\t\t});\n\n\t\t\t// Add public folder\n\t\t\tapp.use(express.static(`${root}/public`));\n\n\t\t\t// Add response time support\n\t\t\t// This will add x-response-time to the response headers\n\t\t\tapp.use(responseTime({ suffix: false }));\n\n\t\t\t// Add partial response support\n\t\t\tapp.use(partialResponse());\n\n\t\t\tapp.use(errorHandlerMiddleware);\n\t\t});\n\t}\n\n\tpublic getServer = (): InversifyExpressServer => {\n\t\treturn this.server;\n\t};\n}\n","import Server from './common/server';\nimport { configureEnv } from './common/config/environment';\n\nconfigureEnv();\nconst app = new Server().getServer().build();\napp.listen(process.env.APP_PORT);\nconsole.log(`Running in ${process.env.APP_PORT}`);\n","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-partial-response\");","module.exports = require(\"inversify\");","module.exports = require(\"inversify-express-utils\");","module.exports = require(\"path\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"response-time\");"],"sourceRoot":""}